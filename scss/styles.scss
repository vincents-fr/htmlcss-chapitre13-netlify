// ordre important , il faut avoir *{xxx} en 1ier
@use "reset";
@use "base";
@use "utils";
@use "classes";
@use "animations";
@use "media-queries" as *;

.grid-container {
  min-height: 100vh;
  display: grid;
  grid:
    "picture header" auto
    "aside main" 1fr
    "footer footer" auto
    / 350px auto;
  @include xs {
    grid:
      "header" auto
      "main" auto
      "picture" auto
      "aside" auto
      "footer" auto
      / auto;
  }
}

header {
  grid-area: header;
  min-height: 30rem;
  background: linear-gradient(to right, var(--primary), var(--dark));
  color: white;
  padding: 8rem 5rem;
  text-align: center;
  // Pour centrer H et V les textes (à cause de l'image qui est plus grande)
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  @include xs {
    padding: 5rem 2rem;
  }
  h1 {
    letter-spacing: 3rem;
    font-size: 6rem;
    line-height: 8rem;
    font-weight: 300;
    @include xs {
      font-size: 4rem;
      letter-spacing: 2rem;
    }
  }
  p {
    font-size: 2rem;
    letter-spacing: 0.5rem;
  }
  span {
    // Sur les élements inline les rotations ne marchent pas
    // alors on le passe en inligne block
    display: inline-block;
    animation: bounce 2s;
  }
}

.picture {
  background: var(--background);
  grid-area: picture;
  padding: 6rem;
  border-right: 1px solid var(--border);

  img {
    border-radius: 50%;
  }
}

aside {
  // temporaire pour test
  // min-height: 1500px;
  grid-area: aside;
  background: var(--background);
  border-right: 1px solid #ddd;
  padding: 5rem;
  @include xs {
    padding: 3rem;
  }
  .block {
    margin-bottom: 5rem;
    h3 {
      margin-bottom: 0;
      font-size: 1.5rem;
    }
    p {
      margin: 0 0 2rem 0;

      font-style: italic;
    }

    .bar-skill {
      margin: 2rem 0;
      height: 5px;
      background: var(--hint);
      // on la passe en relative pour que la suivante puisse se mettre en absolute
      position: relative;
      .bar-skill-progress {
        height: 5px;
        background: var(--primary);
        // On mets le niveau de compétence
        width: 80%;
        // On la positionne en absolue par rapport à la derniere relative rencontreé
        position: absolute;

        top: 0;
        left: 0;
      }
      .bar-skill-dot {
        height: 12px;
        width: 12px;
        border-radius: 50%;
        background: var(--primary);
        position: absolute;

        left: calc(100% - 5px);
        top: -2.5px;
        // transform: rotate(45deg);
      }
    }
    .stars-container {
      color: var(--hint);
      margin: 2rem 0 3rem 0;
      display: flex;
      i {
        font-size: 2rem;
        margin: 0 0.5rem;
      }
    }

    .social-container {
      padding: 1rem 1rem;
      display: flex;
      // Par defaut, le flex en en row
      // Donc sur l'axe principal : au début
      justify-content: start;
      // Et Cross Axis (vertical) au milieu
      align-items: center;
      border-radius: 5px;
      transition: all 0.2s;
      cursor: pointer;
      &:hover {
        background: var(--border);
        i {
          color: var(--primary);
          transform: scale(1.3);

          transition: all 0.3s;
        }
      }
      i {
        font-size: 2rem;
        margin-right: 1rem;
        //flex: grow shrink taille
        // On ne grossit pas, réduit pas l'icone sociale
        flex: 0 0 50px;
      }
      p {
        margin: 0;
        flex: auto;
      }
    }
  }
}

main {
  // Pour le positionnement en grid-area
  grid-area: main;
  padding: 5rem;
  @include xs {
    padding: 5rem 1.5rem;
  }
  h2 {
    margin-bottom: 4rem;
  }
  p {
    letter-spacing: 0.1rem;
    line-height: 3rem;
  }
  .experience {
    margin: 6rem 0;
    display: flex;
    // Par defaut en row
    // flex-direction: row;
    .timeline {
      text-align: center;
      color: var(--hint);
      padding-right: 2rem;
      border-right: 1px solid var(--border);
      p {
        margin: 0;
      }
    }
    .content {
      padding: 0 1rem;
      margin: 0 0;
      h3 {
        margin: 0;
      }
      p {
        margin: 0;
      }
      ul {
        margin: 2rem 0;
        list-style: circle;
        padding-left: 4rem;
      }
    }
  }
}

footer {
  grid-area: footer;
  padding: 5rem;
  background: var(--text);
  display: flex;
  text-align: center;
  flex-direction: column;
  color: white;
  justify-items: center;
  align-items: center;

  @include xs {
    padding: 5rem 1.5rem;
  }
  h2 {
    margin-bottom: 3rem;
  }
  form {
    display: flex;
    align-items: center;

    .prefix {
      background: linear-gradient(to right, var(--dark), var(--light));
      padding: 1rem 2rem;
      color: white;
      font-size: 2rem;
      border-top-left-radius: 0.5rem;
      border-bottom-left-radius: 0.5rem;
    }

    button {
      background: var(--text);
      border: 0;
      cursor: pointer;
      transition: all 0.3s;
      &:hover {
        opacity: 0.8;
      }
      .postfix {
        background: linear-gradient(to right, var(--dark), var(--light));
        padding: 1rem 2rem;
        color: white;
        font-size: 2rem;
        border-top-right-radius: 0.5rem;
        border-bottom-right-radius: 0.5rem;
      }
    }

    input {
      outline: 0;
      border: 0;
      min-width: 40rem;
      @include xs {
        min-width: 20rem;
      }
      padding: 1rem 2rem;
      line-height: 2rem;
      &::placeholder {
        color: var(--text);
      }
    }
  }
}
